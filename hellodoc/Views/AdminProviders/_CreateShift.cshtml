@model hellodoc.DbEntity.ViewModels.Shifts.ShiftDetailsmodal

<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="font-weight:600">
            <form id="createshift" onsubmit="shiftactions('create_shift','#createshift')" method="post">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="exampleModalLabel"> View Shift</h5>
                    <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <select class="form-select mt-3" aria-label="Default select example" id="regionselect" onchange="regionchange()" asp-for="@Model.Regionid">
                        <option selected disabled>Select Region</option>
                        @{
                            foreach (var a in Model.regions)
                            {
                                <option value="@a.Regionid">@a.Name</option>
                            }

                        }

                    </select>
                    <span asp-validation-for="Regionid" class="text-danger"></span>
                    @{
                         if (Model.LoginType == "admin")
                         {
                             <select class="form-select mt-3" aria-label="Default select example" asp-for="@Model.Physicianid" onchange="checkShiftAvailability()" id="Physicianselect">
                                 <option selected disabled>Select Physician</option>
                             </select>
                             <span asp-validation-for="Physicianid" class="text-danger"></span>
                         }
                         else
                         {
                             <select class="form-select mt-3" aria-label="Default select example" asp-for="@Model.Physicianid" onchange="checkShiftAvailability()" id="Physicianselect" disabled>
                                 <option selected value="@Model.Physicianid" disabled> Dr. @Model.physics.FirstOrDefault(p => p.Physicianid == Model.Physicianid).Firstname @Model.physics.FirstOrDefault(p => p.Physicianid == Model.Physicianid).Lastname </option>
                             </select>
                             <span asp-validation-for="Physicianid" class="text-danger"></span>
                         }
                            
                        }

                    

                    <div class="form-floating mt-3 vs">
                        <input type="Date" class="form-control vs" asp-for="Shiftdate" id="dateInput" onchange="DateChange()" placeholder="Shiftdate">
                        <label>Shiftdate</label>
                        <span asp-validation-for="Shiftdate " class="text-danger"></span>
                    </div>

                    <div class="row mt-3">
                        <div class="form-floating mt-3 col-sm-6">
                            <input type="time" class="form-control vs" asp-for="Starttime" id="startTimeInput" onchange="handleStartTimeChange()" placeholder="Starttime">
                            <label class="mx-2">Starttime</label>
                            <span id="startTimeError" class="text-danger"></span>
                        </div>
                        <div class="form-floating mt-3 col-sm-6">
                            <input type="time" class="form-control vs" asp-for="Endtime" id="endTimeInput" onchange="handleEndTimeChange()" placeholder="Endtime">
                            <label class="mx-2">Endtime</label>
                            <span asp-validation-for="Endtime " class="text-danger"></span>
                        </div>
                    </div>
                    <div id="shiftresult" class="fs-6 text-danger"></div>

                    <div class="form-check form-switch mt-3">
                        <label class="form-check-label" for="isrepeat"><span class="fs-6" style="font-weight:400">Repeat</span></label>
                        <input class="form-check-input" type="checkbox" id="isrepeat" onchange="repeattoggle()" asp-for="Isrepeat">
                    </div>

                    <h6 class="mt-3">repeat days</h6>
                    <div class="row mt-2">
                        @{
                            var i = 0;
                            var dayNames = new string[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" };
                            foreach (var item in dayNames)
                            {
                                <div class="form-check col mx-3">
                                    <input class="form-check-input daycheck" type="checkbox"  value="@i" id="@i" disabled>
                                    <label class="form-check-label" for="@i">
                                        <span class="fs-6" style="font-weight:400;">Every @item</span>
                                    </label>
                                </div>
                                i = i + 1;
                            }
                        }
                    </div>

                    <select class="form-select mt-3" aria-label="Default select example" asp-for="Repeatupto">
                        <option value="1" selected>1-times</option>
                        <option value="2" >2-times</option>
                        <option value="3" >3-times</option>
                        <option value="4" >4-times</option>
                        <option value="5" >5-times</option>
                    </select>

                    <div class="mt-4 mb-4 d-flex justify-content-end">
                        <button type="submit" class="btn btn-info text-white mx-1" id="shiftsave" disabled>Save</button>
                        <button type="reset" class="btn btn-info text-white mx-1">Cancel</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>

    var currentDate = new Date();
    var currentTime = currentDate.getHours().toString().padStart(2, "0") + ":" + currentDate.getMinutes().toString().padStart(2, "0");
    document.getElementById("startTimeInput").value = currentTime;

    function handleStartTimeChange() {
        var selectedDate = new Date(document.getElementById("dateInput").value);
        var selectedTime = document.getElementById("startTimeInput").value;
        var currentTime = new Date();
        var currentHour = currentTime.getHours();
        var currentMinute = currentTime.getMinutes();
        var selectedHour = parseInt(selectedTime.split(":")[0]);
        var selectedMinute = parseInt(selectedTime.split(":")[1]);

        // Check if the selected date is the current date and the selected time is less than the current time
        if ((selectedDate.toDateString() === currentTime.toDateString() && (selectedHour < currentHour || (selectedHour === currentHour && selectedMinute < currentMinute))) || (selectedHour === 23 && selectedMinute>=30 ) )  {
            // Set the start time to the current time
            document.getElementById("startTimeInput").value = currentHour.toString().padStart(2, "0") + ":" + currentMinute.toString().padStart(2, "0");
            // Display error message
            document.getElementById("startTimeError").innerText = "Start time must be greater than the current time.";
        } else {
            // Clear error message
            document.getElementById("startTimeError").innerText = "";
        }

        // Automatically set end time 30 minutes after the start time
        var startTime = document.getElementById("startTimeInput").value;
        var endTime = new Date("2000-01-01 " + startTime);
        endTime.setMinutes(endTime.getMinutes() + 30);
        document.getElementById("endTimeInput").value = endTime.getHours().toString().padStart(2, "0") + ":" + endTime.getMinutes().toString().padStart(2, "0");

        checkShiftAvailability();
    }

    // Function to handle changes in the end time input
    function handleEndTimeChange() {
        var startTime = document.getElementById("startTimeInput").value;
        var endTime = document.getElementById("endTimeInput").value;

        var startTimeParts = startTime.split(":");
        var endTimeParts = endTime.split(":");
        var startHour = parseInt(startTimeParts[0]);
        var startMinute = parseInt(startTimeParts[1]);
        var endHour = parseInt(endTimeParts[0]);
        var endMinute = parseInt(endTimeParts[1]);

        var startTimeInMinutes = startHour * 60 + startMinute;
        var endTimeInMinutes = endHour * 60 + endMinute;

        // Check if end time is before start time
        if (endTimeInMinutes <= startTimeInMinutes) {
            var startTime = document.getElementById("startTimeInput").value;
            var endTime = new Date("2000-01-01 " + startTime);
            endTime.setMinutes(endTime.getMinutes() + 30);
            document.getElementById("endTimeInput").value = endTime.getHours().toString().padStart(2, "0") + ":" + endTime.getMinutes().toString().padStart(2, "0");
        }

        checkShiftAvailability();
    }

    function DateChange(){
        handleStartTimeChange();
        handleEndTimeChange();
        checkShiftAvailability();
    }

    function regionchange(){
        if (localStorage.getItem("loginAccount") != "Provider") {
            var select = document.getElementById('regionselect').value;
            getphysician(select);
            checkShiftAvailability();
        } 
    }


    function getphysician(select) {

        var physician = $("#Physicianselect");

        $.ajax({
            url: '/DashActionView/GetPhysicians',
            type: 'POST',
            data: { select: select },
            dataType: 'json',
            success: function (data) {

                physician.empty();
                physician.append('<option selected disabled>Select Physician</option>');

                for (var i = 0; i < data.length; i++) {
                    physician.append('<option value = ' + data[i].physicianid + '>' + data[i].firstname + '</option>');
                }
            },
            error: function (e) {
                console.log(e);
            }
        })
    }
    var toggle = 0;
    function repeattoggle(){
        var inputs = document.getElementsByClassName('daycheck');
        if(toggle == 0){
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = false;
            }
            toggle=1;
        }else{
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].disabled = true;
                inputs[i].checked = false;
            }
            toggle=0;
        }
    }

    var currentDateFormatted = currentDate.toISOString().slice(0, 10);
    dateInput.setAttribute('min', currentDateFormatted);

    function checkShiftAvailability(){

        var physician = $('#Physicianselect').val();
        var starttime = $('#startTimeInput').val();
        var endtime = $('#endTimeInput').val();
        var shiftdate = $('#dateInput').val();
        var submit = document.getElementById('shiftsave');

        $.ajax({
            url: '/AdminProviders/checkShiftAvailability',
            type: 'POST',
            data: { physicianid : physician, starttime: starttime, endtime: endtime, shiftdate: shiftdate },
            success: function (data) {
                if(data == true){
                    submit.disabled = true;
                    $('#shiftresult').text('you already have a shift in this interval');
                }else{
                    submit.disabled = false;
                    $('#shiftresult').text('');
                }
            },
            error: function (e) {
                console.log(e);
            }
        })

    }
    
</script>


<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>