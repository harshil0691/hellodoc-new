@model hellodoc.DbEntity.ViewModels.Shifts.ShiftDetailsmodal

<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="font-weight:600">
            <form id="editshiftform" method="post">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="exampleModalLabel"> View Shift</h5>
                    <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    
                    <select class="form-select mt-3" aria-label="Default select example" asp-for="@Model.Regionid" disabled>
                        <option value="@Model.Regionid">@Model.regionname</option>
                    </select>

                    <select class="form-select mt-3" aria-label="Default select example" asp-for="@Model.Physicianid" disabled>
                        <option value="@Model.Physicianid">Dr. @Model.PhysicianName</option>
                    </select>

                    <div class="form-floating mt-3 vs">
                        <input type="Date" class="form-control vs" asp-for="Shiftdate" id="dateInput" onchange="checkShiftAvailability('@Model.Physicianid')" placeholder="Shiftdate" disabled>
                        <label>Shiftdate</label>
                        <span asp-validation-for="Shiftdate " class="text-danger"></span>
                    </div>

                    <div class="row mt-3">
                        <div class="form-floating mt-3 col-sm-6">
                            <input type="time" class="form-control vs" asp-for="Starttime" id="startTimeInput" onchange="handleStartTimeChange('@Model.Physicianid')" placeholder="Starttime" disabled>
                            <label class="mx-2">Starttime</label>
                            <span id="startTimeError" class="text-danger"></span>
                        </div>
                        <div class="form-floating mt-3 col-sm-6">
                            <input type="time" class="form-control vs" asp-for="Endtime" id="endTimeInput" onchange="handleEndTimeChange('@Model.Physicianid')" placeholder="Endtime" disabled>
                            <label class="mx-2">Endtime</label>
                            <span asp-validation-for="Endtime " class="text-danger"></span>
                        </div>
                    </div>
                    <div id="shiftresult" class="fs-6 text-danger"></div>

                    <div class="mt-4 mb-4 d-flex justify-content-end">
                        @{
                            if(ViewBag.loginType != "provider")
                            {
                                <button type="button" class="mx-1 btn btn-info text-white" onclick="rdShift('return_shift')"> Return</button>
                            }
                        }
                        <button type="button" class="btn btn-info text-white mx-1" onclick="pedit('vs','shiftsave','cancel','edit')" id="edit">Edit</button>
                        <button type="button" class="btn btn-info text-white mx-1" id="shiftsave" style="display:none;" onclick="shiftactions('edit_shift','#editshiftform')" disabled>Save</button>
                        <button type="reset" class="btn btn-info text-white mx-1" id="cancel" style="display:none;" onclick="pcancel('vs','shiftsave','cancel','edit')">Cancel</button>
                        <button type="button" class="mx-1 btn btn-danger text-white" onclick="rdShift('delete_shift')">Delete</button>
                    </div>

                </div>
            </form>
        </div>
    </div>
</div>

<script>

    
    function pedit(classname, save, cancel, edit) {

        document.getElementById(save).style.display = 'block';
        document.getElementById(cancel).style.display = 'block';
        document.getElementById(edit).style.display = 'none';
        var inputs = document.getElementsByClassName(classname);

        for (var i = 0; i < inputs.length; i++) {
            inputs[i].disabled = false;
        }

    }

    function pcancel(classname, save, cancel, edit) {
        document.getElementById(save).style.display = 'none';
        document.getElementById(cancel).style.display = 'none';
        document.getElementById(edit).style.display = 'block';

        var inputs = document.getElementsByClassName(classname);

        for (var i = 0; i < inputs.length; i++) {
            inputs[i].disabled = true;
        }
    }

    var currentDate = new Date();
    var currentTime = currentDate.getHours().toString().padStart(2, "0") + ":" + currentDate.getMinutes().toString().padStart(2, "0");
    
    function handleStartTimeChange(physicianid) {
        var selectedDate = new Date(document.getElementById("dateInput").value);
        var selectedTime = document.getElementById("startTimeInput").value;
        var currentTime = new Date();
        var currentHour = currentTime.getHours();
        var currentMinute = currentTime.getMinutes();
        var selectedHour = parseInt(selectedTime.split(":")[0]);
        var selectedMinute = parseInt(selectedTime.split(":")[1]);

        // Check if the selected date is the current date and the selected time is less than the current time
        if (selectedDate.toDateString() === currentTime.toDateString() && (selectedHour < currentHour || (selectedHour === currentHour && selectedMinute < currentMinute))) {
            // Set the start time to the current time
            document.getElementById("startTimeInput").value = currentHour.toString().padStart(2, "0") + ":" + currentMinute.toString().padStart(2, "0");
            // Display error message
            document.getElementById("startTimeError").innerText = "Start time must be greater than the current time.";
        } else {
            // Clear error message
            document.getElementById("startTimeError").innerText = "";
        }

        // Automatically set end time 30 minutes after the start time
        var startTime = document.getElementById("startTimeInput").value;
        var endTime = new Date("2000-01-01 " + startTime);
        endTime.setMinutes(endTime.getMinutes() + 30);
        document.getElementById("endTimeInput").value = endTime.getHours().toString().padStart(2, "0") + ":" + endTime.getMinutes().toString().padStart(2, "0");

        checkShiftAvailability(physicianid);
    }

    // Function to handle changes in the end time input
    function handleEndTimeChange(physicianid) {
        var startTime = document.getElementById("startTimeInput").value;
        var endTime = document.getElementById("endTimeInput").value;

        var startTimeParts = startTime.split(":");
        var endTimeParts = endTime.split(":");
        var startHour = parseInt(startTimeParts[0]);
        var startMinute = parseInt(startTimeParts[1]);
        var endHour = parseInt(endTimeParts[0]);
        var endMinute = parseInt(endTimeParts[1]);

        var startTimeInMinutes = startHour * 60 + startMinute;
        var endTimeInMinutes = endHour * 60 + endMinute;
        console.log(startTimeInMinutes);
        console.log(endTimeInMinutes);
        // Check if end time is before start time
        if (endTimeInMinutes <= startTimeInMinutes || (endTimeInMinutes - startTimeInMinutes)<30) {
            console.log(0);
            var startTime = document.getElementById("startTimeInput").value;
            var endTime = new Date("2000-01-01 " + startTime);
            endTime.setMinutes(endTime.getMinutes() + 30);
            document.getElementById("endTimeInput").value = endTime.getHours().toString().padStart(2, "0") + ":" + endTime.getMinutes().toString().padStart(2, "0");
        }

        checkShiftAvailability(physicianid);
    }



    var currentDateFormatted = currentDate.toISOString().slice(0, 10);
    dateInput.setAttribute('min', currentDateFormatted);

    function checkShiftAvailability(physicianid) {

        var physician = $('#Physicianselect').val();
        var starttime = $('#startTimeInput').val();
        var endtime = $('#endTimeInput').val();
        var shiftdate = $('#dateInput').val();
        var submit = document.getElementById('shiftsave');

        if(physician == 0 || physician == null){
            physician = physicianid;
        }

        $.ajax({
            url: '/AdminProviders/checkShiftAvailability',
            type: 'POST',
            data: { physicianid: physician, starttime: starttime, endtime: endtime, shiftdate: shiftdate },
            success: function (data) {
                if (data == true) {
                    submit.disabled = true;
                    $('#shiftresult').text('you already have a shift in this interval');
                } else {
                    submit.disabled = false;
                    $('#shiftresult').text('');
                }
            },
            error: function (e) {
                console.log(e);
            }
        })

    }
</script>